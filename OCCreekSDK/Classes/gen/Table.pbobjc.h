// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: table.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class function_table;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - TableRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface TableRoot : GPBRootObject
@end

#pragma mark - function_table

typedef GPB_ENUM(function_table_FieldNumber) {
  function_table_FieldNumber_IsSupport = 1,
  function_table_FieldNumber_CmdId = 2,
};

GPB_FINAL @interface function_table : GPBMessage

@property(nonatomic, readwrite) BOOL isSupport;

/** 2bytes */
@property(nonatomic, readwrite) uint32_t cmdId;

@end

#pragma mark - protocol_function_table

typedef GPB_ENUM(protocol_function_table_FieldNumber) {
  protocol_function_table_FieldNumber_Disturb = 1,
  protocol_function_table_FieldNumber_WaterRemind = 2,
  protocol_function_table_FieldNumber_StandingRemind = 3,
  protocol_function_table_FieldNumber_FemaleHealth = 4,
  protocol_function_table_FieldNumber_Weather = 5,
  protocol_function_table_FieldNumber_MessageData = 6,
  protocol_function_table_FieldNumber_BtCall = 7,
  protocol_function_table_FieldNumber_BleCall = 8,
  protocol_function_table_FieldNumber_ScheduleRemind = 9,
  protocol_function_table_FieldNumber_VoiceAssistant = 10,
  protocol_function_table_FieldNumber_QuickCard = 11,
  protocol_function_table_FieldNumber_WorldTime = 12,
  protocol_function_table_FieldNumber_FrequentContacts = 13,
  protocol_function_table_FieldNumber_Gps = 14,
  protocol_function_table_FieldNumber_OnlineGnss = 15,
  protocol_function_table_FieldNumber_OfflineGnss = 16,
  protocol_function_table_FieldNumber_EmergencyContacts = 17,
  protocol_function_table_FieldNumber_Hrv = 18,
  protocol_function_table_FieldNumber_ButtonCrown = 19,
  protocol_function_table_FieldNumber_FocusMode = 20,
  protocol_function_table_FieldNumber_FindWatch = 21,
  protocol_function_table_FieldNumber_Alexa = 22,
  protocol_function_table_FieldNumber_AppList = 23,
  protocol_function_table_FieldNumber_EventTracking = 24,
  protocol_function_table_FieldNumber_StravaApp = 25,
};

GPB_FINAL @interface protocol_function_table : GPBMessage

/** Do not disturb */
@property(nonatomic, readwrite, strong, null_resettable) function_table *disturb;
/** Test to see if @c disturb has been set. */
@property(nonatomic, readwrite) BOOL hasDisturb;

/** Drink water reminder */
@property(nonatomic, readwrite, strong, null_resettable) function_table *waterRemind;
/** Test to see if @c waterRemind has been set. */
@property(nonatomic, readwrite) BOOL hasWaterRemind;

/** standing reminder */
@property(nonatomic, readwrite, strong, null_resettable) function_table *standingRemind;
/** Test to see if @c standingRemind has been set. */
@property(nonatomic, readwrite) BOOL hasStandingRemind;

/** Female health */
@property(nonatomic, readwrite, strong, null_resettable) function_table *femaleHealth;
/** Test to see if @c femaleHealth has been set. */
@property(nonatomic, readwrite) BOOL hasFemaleHealth;

/** Weather */
@property(nonatomic, readwrite, strong, null_resettable) function_table *weather;
/** Test to see if @c weather has been set. */
@property(nonatomic, readwrite) BOOL hasWeather;

/** Message reminder */
@property(nonatomic, readwrite, strong, null_resettable) function_table *messageData;
/** Test to see if @c messageData has been set. */
@property(nonatomic, readwrite) BOOL hasMessageData;

/** Whether it is a bt protocol call */
@property(nonatomic, readwrite, strong, null_resettable) function_table *btCall;
/** Test to see if @c btCall has been set. */
@property(nonatomic, readwrite) BOOL hasBtCall;

/** Whether ble protocol call */
@property(nonatomic, readwrite, strong, null_resettable) function_table *bleCall;
/** Test to see if @c bleCall has been set. */
@property(nonatomic, readwrite) BOOL hasBleCall;

/** schedule reminder */
@property(nonatomic, readwrite, strong, null_resettable) function_table *scheduleRemind;
/** Test to see if @c scheduleRemind has been set. */
@property(nonatomic, readwrite) BOOL hasScheduleRemind;

/** Voice assistant */
@property(nonatomic, readwrite, strong, null_resettable) function_table *voiceAssistant;
/** Test to see if @c voiceAssistant has been set. */
@property(nonatomic, readwrite) BOOL hasVoiceAssistant;

/** Quick card */
@property(nonatomic, readwrite, strong, null_resettable) function_table *quickCard;
/** Test to see if @c quickCard has been set. */
@property(nonatomic, readwrite) BOOL hasQuickCard;

/** World clock */
@property(nonatomic, readwrite, strong, null_resettable) function_table *worldTime;
/** Test to see if @c worldTime has been set. */
@property(nonatomic, readwrite) BOOL hasWorldTime;

/** Frequently used contacts */
@property(nonatomic, readwrite, strong, null_resettable) function_table *frequentContacts;
/** Test to see if @c frequentContacts has been set. */
@property(nonatomic, readwrite) BOOL hasFrequentContacts;

/** gps function */
@property(nonatomic, readwrite, strong, null_resettable) function_table *gps;
/** Test to see if @c gps has been set. */
@property(nonatomic, readwrite) BOOL hasGps;

/** Online ephemeris */
@property(nonatomic, readwrite, strong, null_resettable) function_table *onlineGnss;
/** Test to see if @c onlineGnss has been set. */
@property(nonatomic, readwrite) BOOL hasOnlineGnss;

/** Offline ephemeris */
@property(nonatomic, readwrite, strong, null_resettable) function_table *offlineGnss;
/** Test to see if @c offlineGnss has been set. */
@property(nonatomic, readwrite) BOOL hasOfflineGnss;

/** Emergency contacts (SOS) */
@property(nonatomic, readwrite, strong, null_resettable) function_table *emergencyContacts;
/** Test to see if @c emergencyContacts has been set. */
@property(nonatomic, readwrite) BOOL hasEmergencyContacts;

/** hrv */
@property(nonatomic, readwrite, strong, null_resettable) function_table *hrv;
/** Test to see if @c hrv has been set. */
@property(nonatomic, readwrite) BOOL hasHrv;

/** Key shortcut operations */
@property(nonatomic, readwrite, strong, null_resettable) function_table *buttonCrown;
/** Test to see if @c buttonCrown has been set. */
@property(nonatomic, readwrite) BOOL hasButtonCrown;

/** Focus mode */
@property(nonatomic, readwrite, strong, null_resettable) function_table *focusMode;
/** Test to see if @c focusMode has been set. */
@property(nonatomic, readwrite) BOOL hasFocusMode;

/** Find watch */
@property(nonatomic, readwrite, strong, null_resettable) function_table *findWatch;
/** Test to see if @c findWatch has been set. */
@property(nonatomic, readwrite) BOOL hasFindWatch;

/** alexa */
@property(nonatomic, readwrite, strong, null_resettable) function_table *alexa;
/** Test to see if @c alexa has been set. */
@property(nonatomic, readwrite) BOOL hasAlexa;

/** Application list */
@property(nonatomic, readwrite, strong, null_resettable) function_table *appList;
/** Test to see if @c appList has been set. */
@property(nonatomic, readwrite) BOOL hasAppList;

/** Data burying point */
@property(nonatomic, readwrite, strong, null_resettable) function_table *eventTracking;
/** Test to see if @c eventTracking has been set. */
@property(nonatomic, readwrite) BOOL hasEventTracking;

/** Strava support, upload data to third-party platform */
@property(nonatomic, readwrite, strong, null_resettable) function_table *stravaApp;
/** Test to see if @c stravaApp has been set. */
@property(nonatomic, readwrite) BOOL hasStravaApp;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
