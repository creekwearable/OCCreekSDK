// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: health.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "Health.pbobjc.h"
#import "Enums.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(protocol_health_get_data_size_item);

#pragma mark - HealthRoot

@implementation HealthRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - HealthRoot_FileDescriptor

static GPBFileDescriptor *HealthRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - protocol_health_get_data_size_item

@implementation protocol_health_get_data_size_item

@dynamic type;
@dynamic dataOffset;

typedef struct protocol_health_get_data_size_item__storage_ {
  uint32_t _has_storage_[1];
  sync_type type;
  uint32_t dataOffset;
} protocol_health_get_data_size_item__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "type",
        .dataTypeSpecific.enumDescFunc = sync_type_EnumDescriptor,
        .number = protocol_health_get_data_size_item_FieldNumber_Type,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(protocol_health_get_data_size_item__storage_, type),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "dataOffset",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_item_FieldNumber_DataOffset,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(protocol_health_get_data_size_item__storage_, dataOffset),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[protocol_health_get_data_size_item class]
                                     rootClass:[HealthRoot class]
                                          file:HealthRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(protocol_health_get_data_size_item__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t protocol_health_get_data_size_item_Type_RawValue(protocol_health_get_data_size_item *message) {
  GPBDescriptor *descriptor = [protocol_health_get_data_size_item descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:protocol_health_get_data_size_item_FieldNumber_Type];
  return GPBGetMessageRawEnumField(message, field);
}

void Setprotocol_health_get_data_size_item_Type_RawValue(protocol_health_get_data_size_item *message, int32_t value) {
  GPBDescriptor *descriptor = [protocol_health_get_data_size_item descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:protocol_health_get_data_size_item_FieldNumber_Type];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - protocol_health_get_data_size_operate

@implementation protocol_health_get_data_size_operate

@dynamic operate;
@dynamic itemArray, itemArray_Count;

typedef struct protocol_health_get_data_size_operate__storage_ {
  uint32_t _has_storage_[1];
  operate_type operate;
  NSMutableArray *itemArray;
} protocol_health_get_data_size_operate__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "operate",
        .dataTypeSpecific.enumDescFunc = operate_type_EnumDescriptor,
        .number = protocol_health_get_data_size_operate_FieldNumber_Operate,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(protocol_health_get_data_size_operate__storage_, operate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "itemArray",
        .dataTypeSpecific.clazz = GPBObjCClass(protocol_health_get_data_size_item),
        .number = protocol_health_get_data_size_operate_FieldNumber_ItemArray,
        .hasIndex = GPBNoHasBit,
        .offset = (uint32_t)offsetof(protocol_health_get_data_size_operate__storage_, itemArray),
        .flags = GPBFieldRepeated,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[protocol_health_get_data_size_operate class]
                                     rootClass:[HealthRoot class]
                                          file:HealthRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(protocol_health_get_data_size_operate__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t protocol_health_get_data_size_operate_Operate_RawValue(protocol_health_get_data_size_operate *message) {
  GPBDescriptor *descriptor = [protocol_health_get_data_size_operate descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:protocol_health_get_data_size_operate_FieldNumber_Operate];
  return GPBGetMessageRawEnumField(message, field);
}

void Setprotocol_health_get_data_size_operate_Operate_RawValue(protocol_health_get_data_size_operate *message, int32_t value) {
  GPBDescriptor *descriptor = [protocol_health_get_data_size_operate descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:protocol_health_get_data_size_operate_FieldNumber_Operate];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - protocol_health_get_data_size_set_reply

@implementation protocol_health_get_data_size_set_reply

@dynamic operate;
@dynamic totalSize;
@dynamic errorCode;

typedef struct protocol_health_get_data_size_set_reply__storage_ {
  uint32_t _has_storage_[1];
  operate_type operate;
  uint32_t totalSize;
  uint32_t errorCode;
} protocol_health_get_data_size_set_reply__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "operate",
        .dataTypeSpecific.enumDescFunc = operate_type_EnumDescriptor,
        .number = protocol_health_get_data_size_set_reply_FieldNumber_Operate,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(protocol_health_get_data_size_set_reply__storage_, operate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "totalSize",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_set_reply_FieldNumber_TotalSize,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(protocol_health_get_data_size_set_reply__storage_, totalSize),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "errorCode",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_set_reply_FieldNumber_ErrorCode,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(protocol_health_get_data_size_set_reply__storage_, errorCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[protocol_health_get_data_size_set_reply class]
                                     rootClass:[HealthRoot class]
                                          file:HealthRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(protocol_health_get_data_size_set_reply__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t protocol_health_get_data_size_set_reply_Operate_RawValue(protocol_health_get_data_size_set_reply *message) {
  GPBDescriptor *descriptor = [protocol_health_get_data_size_set_reply descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:protocol_health_get_data_size_set_reply_FieldNumber_Operate];
  return GPBGetMessageRawEnumField(message, field);
}

void Setprotocol_health_get_data_size_set_reply_Operate_RawValue(protocol_health_get_data_size_set_reply *message, int32_t value) {
  GPBDescriptor *descriptor = [protocol_health_get_data_size_set_reply descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:protocol_health_get_data_size_set_reply_FieldNumber_Operate];
  GPBSetMessageRawEnumField(message, field, value);
}

#pragma mark - protocol_health_get_data_size_inquire_reply

@implementation protocol_health_get_data_size_inquire_reply

@dynamic operate;
@dynamic hearRateSupport;
@dynamic stressSupport;
@dynamic spo2Support;
@dynamic sleepSupport;
@dynamic exerciseSupport;
@dynamic activitySupport;
@dynamic swimSupport;
@dynamic gpsSupport;
@dynamic noiseSupport;
@dynamic bodyEnergySupport;
@dynamic respiratoryRateSupport;
@dynamic skinTemperatureSupport;

typedef struct protocol_health_get_data_size_inquire_reply__storage_ {
  uint32_t _has_storage_[1];
  operate_type operate;
} protocol_health_get_data_size_inquire_reply__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "operate",
        .dataTypeSpecific.enumDescFunc = operate_type_EnumDescriptor,
        .number = protocol_health_get_data_size_inquire_reply_FieldNumber_Operate,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(protocol_health_get_data_size_inquire_reply__storage_, operate),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "hearRateSupport",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_inquire_reply_FieldNumber_HearRateSupport,
        .hasIndex = 1,
        .offset = 2,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "stressSupport",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_inquire_reply_FieldNumber_StressSupport,
        .hasIndex = 3,
        .offset = 4,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "spo2Support",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_inquire_reply_FieldNumber_Spo2Support,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "sleepSupport",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_inquire_reply_FieldNumber_SleepSupport,
        .hasIndex = 7,
        .offset = 8,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "exerciseSupport",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_inquire_reply_FieldNumber_ExerciseSupport,
        .hasIndex = 9,
        .offset = 10,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "activitySupport",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_inquire_reply_FieldNumber_ActivitySupport,
        .hasIndex = 11,
        .offset = 12,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "swimSupport",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_inquire_reply_FieldNumber_SwimSupport,
        .hasIndex = 13,
        .offset = 14,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "gpsSupport",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_inquire_reply_FieldNumber_GpsSupport,
        .hasIndex = 15,
        .offset = 16,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "noiseSupport",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_inquire_reply_FieldNumber_NoiseSupport,
        .hasIndex = 17,
        .offset = 18,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "bodyEnergySupport",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_inquire_reply_FieldNumber_BodyEnergySupport,
        .hasIndex = 19,
        .offset = 20,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "respiratoryRateSupport",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_inquire_reply_FieldNumber_RespiratoryRateSupport,
        .hasIndex = 21,
        .offset = 22,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "skinTemperatureSupport",
        .dataTypeSpecific.clazz = Nil,
        .number = protocol_health_get_data_size_inquire_reply_FieldNumber_SkinTemperatureSupport,
        .hasIndex = 23,
        .offset = 24,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[protocol_health_get_data_size_inquire_reply class]
                                     rootClass:[HealthRoot class]
                                          file:HealthRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(protocol_health_get_data_size_inquire_reply__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t protocol_health_get_data_size_inquire_reply_Operate_RawValue(protocol_health_get_data_size_inquire_reply *message) {
  GPBDescriptor *descriptor = [protocol_health_get_data_size_inquire_reply descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:protocol_health_get_data_size_inquire_reply_FieldNumber_Operate];
  return GPBGetMessageRawEnumField(message, field);
}

void Setprotocol_health_get_data_size_inquire_reply_Operate_RawValue(protocol_health_get_data_size_inquire_reply *message, int32_t value) {
  GPBDescriptor *descriptor = [protocol_health_get_data_size_inquire_reply descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:protocol_health_get_data_size_inquire_reply_FieldNumber_Operate];
  GPBSetMessageRawEnumField(message, field, value);
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
