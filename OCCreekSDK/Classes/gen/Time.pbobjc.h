// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: time.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class protocol_time;
GPB_ENUM_FWD_DECLARE(operate_type);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - TimeRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface TimeRoot : GPBRootObject
@end

#pragma mark - protocol_time

typedef GPB_ENUM(protocol_time_FieldNumber) {
  protocol_time_FieldNumber_Year = 1,
  protocol_time_FieldNumber_Month = 2,
  protocol_time_FieldNumber_Day = 3,
  protocol_time_FieldNumber_Hour = 4,
  protocol_time_FieldNumber_Minute = 5,
  protocol_time_FieldNumber_Second = 6,
  protocol_time_FieldNumber_Week = 7,
  protocol_time_FieldNumber_UtcTime = 8,
  protocol_time_FieldNumber_TimeZone = 9,
};

GPB_FINAL @interface protocol_time : GPBMessage

/** 2bytes */
@property(nonatomic, readwrite) uint32_t year;

/** 1bytes */
@property(nonatomic, readwrite) uint32_t month;

/** 1bytes */
@property(nonatomic, readwrite) uint32_t day;

/** 1bytes */
@property(nonatomic, readwrite) uint32_t hour;

/** 1bytes */
@property(nonatomic, readwrite) uint32_t minute;

/** 1bytes */
@property(nonatomic, readwrite) uint32_t second;

/** 1bytes */
@property(nonatomic, readwrite) uint32_t week;

/** 4bytes */
@property(nonatomic, readwrite) uint32_t utcTime;

/** 4bytes use 24 time zones, the time zone obtained on the mobile phone is an integer, 0-12 east, 13-24 west, the unit is minutes, for example, the eighth district of east: 8*60 */
@property(nonatomic, readwrite) uint32_t timeZone;

@end

#pragma mark - protocol_device_time_operate

typedef GPB_ENUM(protocol_device_time_operate_FieldNumber) {
  protocol_device_time_operate_FieldNumber_Operate = 1,
  protocol_device_time_operate_FieldNumber_Time = 2,
};

GPB_FINAL @interface protocol_device_time_operate : GPBMessage

/** operation type 0: invalid operation 1: query 2: setting */
@property(nonatomic, readwrite) enum operate_type operate;

@property(nonatomic, readwrite, strong, null_resettable) protocol_time *time;
/** Test to see if @c time has been set. */
@property(nonatomic, readwrite) BOOL hasTime;

@end

/**
 * Fetches the raw value of a @c protocol_device_time_operate's @c operate property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t protocol_device_time_operate_Operate_RawValue(protocol_device_time_operate *message);
/**
 * Sets the raw value of an @c protocol_device_time_operate's @c operate property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setprotocol_device_time_operate_Operate_RawValue(protocol_device_time_operate *message, int32_t value);

#pragma mark - protocol_device_time_inquire_reply

typedef GPB_ENUM(protocol_device_time_inquire_reply_FieldNumber) {
  protocol_device_time_inquire_reply_FieldNumber_Operate = 1,
  protocol_device_time_inquire_reply_FieldNumber_Time = 2,
};

GPB_FINAL @interface protocol_device_time_inquire_reply : GPBMessage

/** operation type 0: invalid operation 1: query 2: setting */
@property(nonatomic, readwrite) enum operate_type operate;

@property(nonatomic, readwrite, strong, null_resettable) protocol_time *time;
/** Test to see if @c time has been set. */
@property(nonatomic, readwrite) BOOL hasTime;

@end

/**
 * Fetches the raw value of a @c protocol_device_time_inquire_reply's @c operate property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t protocol_device_time_inquire_reply_Operate_RawValue(protocol_device_time_inquire_reply *message);
/**
 * Sets the raw value of an @c protocol_device_time_inquire_reply's @c operate property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setprotocol_device_time_inquire_reply_Operate_RawValue(protocol_device_time_inquire_reply *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
