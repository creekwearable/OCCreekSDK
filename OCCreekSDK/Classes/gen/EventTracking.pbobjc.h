// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eventTracking.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class sport_bt_conn;
GPB_ENUM_FWD_DECLARE(operate_type);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - EventTrackingRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface EventTrackingRoot : GPBRootObject
@end

#pragma mark - sport_bt_conn

typedef GPB_ENUM(sport_bt_conn_FieldNumber) {
  sport_bt_conn_FieldNumber_SportDurations = 1,
  sport_bt_conn_FieldNumber_BtDurations = 2,
};

GPB_FINAL @interface sport_bt_conn : GPBMessage

/** Sports time */
@property(nonatomic, readwrite) uint32_t sportDurations;

/** Connect Bluetooth time */
@property(nonatomic, readwrite) uint32_t btDurations;

@end

#pragma mark - protocol_event_tracking_operate

typedef GPB_ENUM(protocol_event_tracking_operate_FieldNumber) {
  protocol_event_tracking_operate_FieldNumber_Operate = 1,
};

GPB_FINAL @interface protocol_event_tracking_operate : GPBMessage

/** 1bytes operation type 0: invalid operation 1: query 2: setting */
@property(nonatomic, readwrite) enum operate_type operate;

@end

/**
 * Fetches the raw value of a @c protocol_event_tracking_operate's @c operate property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t protocol_event_tracking_operate_Operate_RawValue(protocol_event_tracking_operate *message);
/**
 * Sets the raw value of an @c protocol_event_tracking_operate's @c operate property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setprotocol_event_tracking_operate_Operate_RawValue(protocol_event_tracking_operate *message, int32_t value);

#pragma mark - protocol_event_tracking_inquire_reply

typedef GPB_ENUM(protocol_event_tracking_inquire_reply_FieldNumber) {
  protocol_event_tracking_inquire_reply_FieldNumber_Operate = 1,
  protocol_event_tracking_inquire_reply_FieldNumber_PhoneFuncArray = 2,
  protocol_event_tracking_inquire_reply_FieldNumber_ClickDialArray = 3,
  protocol_event_tracking_inquire_reply_FieldNumber_ClickAnswerArray = 4,
  protocol_event_tracking_inquire_reply_FieldNumber_SportBtConnArray = 5,
};

GPB_FINAL @interface protocol_event_tracking_inquire_reply : GPBMessage

/** 1bytes operation type 0: invalid operation 1: query 2: setting */
@property(nonatomic, readwrite) enum operate_type operate;

/** Record the duration of the call function */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *phoneFuncArray;
/** The number of items in @c phoneFuncArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger phoneFuncArray_Count;

/** Record the start time point of click dialing */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *clickDialArray;
/** The number of items in @c clickDialArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger clickDialArray_Count;

/** Record the start time point of click to answer */
@property(nonatomic, readwrite, strong, null_resettable) GPBUInt32Array *clickAnswerArray;
/** The number of items in @c clickAnswerArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger clickAnswerArray_Count;

/** Record the duration of Bluetooth connection during exercise */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<sport_bt_conn*> *sportBtConnArray;
/** The number of items in @c sportBtConnArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger sportBtConnArray_Count;

@end

/**
 * Fetches the raw value of a @c protocol_event_tracking_inquire_reply's @c operate property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t protocol_event_tracking_inquire_reply_Operate_RawValue(protocol_event_tracking_inquire_reply *message);
/**
 * Sets the raw value of an @c protocol_event_tracking_inquire_reply's @c operate property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setprotocol_event_tracking_inquire_reply_Operate_RawValue(protocol_event_tracking_inquire_reply *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
