// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: health.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class protocol_health_get_data_size_item;
GPB_ENUM_FWD_DECLARE(operate_type);
GPB_ENUM_FWD_DECLARE(sync_type);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - HealthRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface HealthRoot : GPBRootObject
@end

#pragma mark - protocol_health_get_data_size_item

typedef GPB_ENUM(protocol_health_get_data_size_item_FieldNumber) {
  protocol_health_get_data_size_item_FieldNumber_Type = 1,
  protocol_health_get_data_size_item_FieldNumber_DataOffset = 2,
};

GPB_FINAL @interface protocol_health_get_data_size_item : GPBMessage

@property(nonatomic, readwrite) enum sync_type type;

/** 1bytes synchronous data offset */
@property(nonatomic, readwrite) uint32_t dataOffset;

@end

/**
 * Fetches the raw value of a @c protocol_health_get_data_size_item's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t protocol_health_get_data_size_item_Type_RawValue(protocol_health_get_data_size_item *message);
/**
 * Sets the raw value of an @c protocol_health_get_data_size_item's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setprotocol_health_get_data_size_item_Type_RawValue(protocol_health_get_data_size_item *message, int32_t value);

#pragma mark - protocol_health_get_data_size_operate

typedef GPB_ENUM(protocol_health_get_data_size_operate_FieldNumber) {
  protocol_health_get_data_size_operate_FieldNumber_Operate = 1,
  protocol_health_get_data_size_operate_FieldNumber_ItemArray = 2,
};

GPB_FINAL @interface protocol_health_get_data_size_operate : GPBMessage

/** 1bytes operation type 0: invalid operation 1: query 2: set */
@property(nonatomic, readwrite) enum operate_type operate;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<protocol_health_get_data_size_item*> *itemArray;
/** The number of items in @c itemArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger itemArray_Count;

@end

/**
 * Fetches the raw value of a @c protocol_health_get_data_size_operate's @c operate property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t protocol_health_get_data_size_operate_Operate_RawValue(protocol_health_get_data_size_operate *message);
/**
 * Sets the raw value of an @c protocol_health_get_data_size_operate's @c operate property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setprotocol_health_get_data_size_operate_Operate_RawValue(protocol_health_get_data_size_operate *message, int32_t value);

#pragma mark - protocol_health_get_data_size_set_reply

typedef GPB_ENUM(protocol_health_get_data_size_set_reply_FieldNumber) {
  protocol_health_get_data_size_set_reply_FieldNumber_Operate = 1,
  protocol_health_get_data_size_set_reply_FieldNumber_TotalSize = 2,
  protocol_health_get_data_size_set_reply_FieldNumber_ErrorCode = 3,
};

GPB_FINAL @interface protocol_health_get_data_size_set_reply : GPBMessage

/** 1bytes operation type 0: invalid operation 1: query 2: set */
@property(nonatomic, readwrite) enum operate_type operate;

@property(nonatomic, readwrite) uint32_t totalSize;

/** 0 is normal, non-0 is failed */
@property(nonatomic, readwrite) uint32_t errorCode;

@end

/**
 * Fetches the raw value of a @c protocol_health_get_data_size_set_reply's @c operate property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t protocol_health_get_data_size_set_reply_Operate_RawValue(protocol_health_get_data_size_set_reply *message);
/**
 * Sets the raw value of an @c protocol_health_get_data_size_set_reply's @c operate property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setprotocol_health_get_data_size_set_reply_Operate_RawValue(protocol_health_get_data_size_set_reply *message, int32_t value);

#pragma mark - protocol_health_get_data_size_inquire_reply

typedef GPB_ENUM(protocol_health_get_data_size_inquire_reply_FieldNumber) {
  protocol_health_get_data_size_inquire_reply_FieldNumber_Operate = 1,
  protocol_health_get_data_size_inquire_reply_FieldNumber_HearRateSupport = 2,
  protocol_health_get_data_size_inquire_reply_FieldNumber_StressSupport = 3,
  protocol_health_get_data_size_inquire_reply_FieldNumber_Spo2Support = 4,
  protocol_health_get_data_size_inquire_reply_FieldNumber_SleepSupport = 5,
  protocol_health_get_data_size_inquire_reply_FieldNumber_ExerciseSupport = 6,
  protocol_health_get_data_size_inquire_reply_FieldNumber_ActivitySupport = 7,
  protocol_health_get_data_size_inquire_reply_FieldNumber_SwimSupport = 8,
  protocol_health_get_data_size_inquire_reply_FieldNumber_GpsSupport = 9,
  protocol_health_get_data_size_inquire_reply_FieldNumber_NoiseSupport = 10,
  protocol_health_get_data_size_inquire_reply_FieldNumber_BodyEnergySupport = 11,
  protocol_health_get_data_size_inquire_reply_FieldNumber_RespiratoryRateSupport = 12,
  protocol_health_get_data_size_inquire_reply_FieldNumber_SkinTemperatureSupport = 13,
};

GPB_FINAL @interface protocol_health_get_data_size_inquire_reply : GPBMessage

/** 1bytes operation type 0: invalid operation 1: query 2: set */
@property(nonatomic, readwrite) enum operate_type operate;

/** support heart rate data */
@property(nonatomic, readwrite) BOOL hearRateSupport;

/** support blood oxygen data */
@property(nonatomic, readwrite) BOOL stressSupport;

/** support pressure data */
@property(nonatomic, readwrite) BOOL spo2Support;

/** support sleep data */
@property(nonatomic, readwrite) BOOL sleepSupport;

/** support multi-exercise data */
@property(nonatomic, readwrite) BOOL exerciseSupport;

/** support daily activity data */
@property(nonatomic, readwrite) BOOL activitySupport;

/** support swimming data */
@property(nonatomic, readwrite) BOOL swimSupport;

/** gps data */
@property(nonatomic, readwrite) BOOL gpsSupport;

/** support noise data */
@property(nonatomic, readwrite) BOOL noiseSupport;

/** support body energy data */
@property(nonatomic, readwrite) BOOL bodyEnergySupport;

/** support respiratory rate data */
@property(nonatomic, readwrite) BOOL respiratoryRateSupport;

/** Support skin temperature data */
@property(nonatomic, readwrite) BOOL skinTemperatureSupport;

@end

/**
 * Fetches the raw value of a @c protocol_health_get_data_size_inquire_reply's @c operate property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t protocol_health_get_data_size_inquire_reply_Operate_RawValue(protocol_health_get_data_size_inquire_reply *message);
/**
 * Sets the raw value of an @c protocol_health_get_data_size_inquire_reply's @c operate property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setprotocol_health_get_data_size_inquire_reply_Operate_RawValue(protocol_health_get_data_size_inquire_reply *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
