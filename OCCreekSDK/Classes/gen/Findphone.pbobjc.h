// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: findphone.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

GPB_ENUM_FWD_DECLARE(operate_type);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - FindphoneRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface FindphoneRoot : GPBRootObject
@end

#pragma mark - protocol_find_phone_watch_operate

typedef GPB_ENUM(protocol_find_phone_watch_operate_FieldNumber) {
  protocol_find_phone_watch_operate_FieldNumber_Operate = 1,
  protocol_find_phone_watch_operate_FieldNumber_FindWatchSwitch = 2,
  protocol_find_phone_watch_operate_FieldNumber_FindWatchFlag = 3,
};

GPB_FINAL @interface protocol_find_phone_watch_operate : GPBMessage

/** 1bytes operation type 0: invalid operation 1: query 2: setting */
@property(nonatomic, readwrite) enum operate_type operate;

/** 1bytes Find watch switch true to turn on, false to turn off */
@property(nonatomic, readwrite) BOOL findWatchSwitch;

/** 1bytes find watch 0 stop 1: start */
@property(nonatomic, readwrite) BOOL findWatchFlag;

@end

/**
 * Fetches the raw value of a @c protocol_find_phone_watch_operate's @c operate property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t protocol_find_phone_watch_operate_Operate_RawValue(protocol_find_phone_watch_operate *message);
/**
 * Sets the raw value of an @c protocol_find_phone_watch_operate's @c operate property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setprotocol_find_phone_watch_operate_Operate_RawValue(protocol_find_phone_watch_operate *message, int32_t value);

#pragma mark - protocol_find_phone_watch_inquire_reply

typedef GPB_ENUM(protocol_find_phone_watch_inquire_reply_FieldNumber) {
  protocol_find_phone_watch_inquire_reply_FieldNumber_Operate = 1,
  protocol_find_phone_watch_inquire_reply_FieldNumber_FuncTable = 2,
  protocol_find_phone_watch_inquire_reply_FieldNumber_FindWatchSwitch = 3,
  protocol_find_phone_watch_inquire_reply_FieldNumber_FindWatchSupport = 4,
};

GPB_FINAL @interface protocol_find_phone_watch_inquire_reply : GPBMessage

/** 1bytes operation type 0: invalid operation 1: query 2: setting */
@property(nonatomic, readwrite) enum operate_type operate;

@property(nonatomic, readwrite) uint32_t funcTable;

/** 1bytes Find watch switch true to turn on, false to turn off */
@property(nonatomic, readwrite) BOOL findWatchSwitch;

/** Whether it supports finding watches */
@property(nonatomic, readwrite) BOOL findWatchSupport;

@end

/**
 * Fetches the raw value of a @c protocol_find_phone_watch_inquire_reply's @c operate property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t protocol_find_phone_watch_inquire_reply_Operate_RawValue(protocol_find_phone_watch_inquire_reply *message);
/**
 * Sets the raw value of an @c protocol_find_phone_watch_inquire_reply's @c operate property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setprotocol_find_phone_watch_inquire_reply_Operate_RawValue(protocol_find_phone_watch_inquire_reply *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
