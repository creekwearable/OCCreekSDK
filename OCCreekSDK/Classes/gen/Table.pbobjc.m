// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: table.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "Table.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#pragma mark - Objective C Class declarations
// Forward declarations of Objective C classes that we can use as
// static values in struct initializers.
// We don't use [Foo class] because it is not a static value.
GPBObjCClassDeclaration(function_table);

#pragma mark - TableRoot

@implementation TableRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - TableRoot_FileDescriptor

static GPBFileDescriptor *TableRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - function_table

@implementation function_table

@dynamic isSupport;
@dynamic cmdId;

typedef struct function_table__storage_ {
  uint32_t _has_storage_[1];
  uint32_t cmdId;
} function_table__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "isSupport",
        .dataTypeSpecific.clazz = Nil,
        .number = function_table_FieldNumber_IsSupport,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "cmdId",
        .dataTypeSpecific.clazz = Nil,
        .number = function_table_FieldNumber_CmdId,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(function_table__storage_, cmdId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldClearHasIvarOnZero),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[function_table class]
                                     rootClass:[TableRoot class]
                                          file:TableRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(function_table__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - protocol_function_table

@implementation protocol_function_table

@dynamic hasDisturb, disturb;
@dynamic hasWaterRemind, waterRemind;
@dynamic hasStandingRemind, standingRemind;
@dynamic hasFemaleHealth, femaleHealth;
@dynamic hasWeather, weather;
@dynamic hasMessageData, messageData;
@dynamic hasBtCall, btCall;
@dynamic hasBleCall, bleCall;
@dynamic hasScheduleRemind, scheduleRemind;
@dynamic hasVoiceAssistant, voiceAssistant;
@dynamic hasQuickCard, quickCard;
@dynamic hasWorldTime, worldTime;
@dynamic hasFrequentContacts, frequentContacts;
@dynamic hasGps, gps;
@dynamic hasOnlineGnss, onlineGnss;
@dynamic hasOfflineGnss, offlineGnss;
@dynamic hasEmergencyContacts, emergencyContacts;
@dynamic hasHrv, hrv;
@dynamic hasButtonCrown, buttonCrown;
@dynamic hasFocusMode, focusMode;
@dynamic hasFindWatch, findWatch;

typedef struct protocol_function_table__storage_ {
  uint32_t _has_storage_[1];
  function_table *disturb;
  function_table *waterRemind;
  function_table *standingRemind;
  function_table *femaleHealth;
  function_table *weather;
  function_table *messageData;
  function_table *btCall;
  function_table *bleCall;
  function_table *scheduleRemind;
  function_table *voiceAssistant;
  function_table *quickCard;
  function_table *worldTime;
  function_table *frequentContacts;
  function_table *gps;
  function_table *onlineGnss;
  function_table *offlineGnss;
  function_table *emergencyContacts;
  function_table *hrv;
  function_table *buttonCrown;
  function_table *focusMode;
  function_table *findWatch;
} protocol_function_table__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "disturb",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_Disturb,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, disturb),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "waterRemind",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_WaterRemind,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, waterRemind),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "standingRemind",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_StandingRemind,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, standingRemind),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "femaleHealth",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_FemaleHealth,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, femaleHealth),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "weather",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_Weather,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, weather),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "messageData",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_MessageData,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, messageData),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "btCall",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_BtCall,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, btCall),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "bleCall",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_BleCall,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, bleCall),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "scheduleRemind",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_ScheduleRemind,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, scheduleRemind),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "voiceAssistant",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_VoiceAssistant,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, voiceAssistant),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "quickCard",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_QuickCard,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, quickCard),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "worldTime",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_WorldTime,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, worldTime),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "frequentContacts",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_FrequentContacts,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, frequentContacts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "gps",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_Gps,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, gps),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "onlineGnss",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_OnlineGnss,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, onlineGnss),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "offlineGnss",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_OfflineGnss,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, offlineGnss),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "emergencyContacts",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_EmergencyContacts,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, emergencyContacts),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "hrv",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_Hrv,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, hrv),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "buttonCrown",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_ButtonCrown,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, buttonCrown),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "focusMode",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_FocusMode,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, focusMode),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "findWatch",
        .dataTypeSpecific.clazz = GPBObjCClass(function_table),
        .number = protocol_function_table_FieldNumber_FindWatch,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(protocol_function_table__storage_, findWatch),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[protocol_function_table class]
                                     rootClass:[TableRoot class]
                                          file:TableRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(protocol_function_table__storage_)
                                         flags:(GPBDescriptorInitializationFlags)(GPBDescriptorInitializationFlag_UsesClassRefs | GPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
