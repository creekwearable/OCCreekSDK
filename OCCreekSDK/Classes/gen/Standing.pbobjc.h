// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: standing.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class protocol_standing_remind_set;
GPB_ENUM_FWD_DECLARE(notify_type);
GPB_ENUM_FWD_DECLARE(operate_type);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - StandingRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
GPB_FINAL @interface StandingRoot : GPBRootObject
@end

#pragma mark - protocol_standing_remind_set

typedef GPB_ENUM(protocol_standing_remind_set_FieldNumber) {
  protocol_standing_remind_set_FieldNumber_SwitchFlag = 1,
  protocol_standing_remind_set_FieldNumber_NotifyFlag = 2,
  protocol_standing_remind_set_FieldNumber_StartHour = 3,
  protocol_standing_remind_set_FieldNumber_StartMinute = 4,
  protocol_standing_remind_set_FieldNumber_EndHour = 5,
  protocol_standing_remind_set_FieldNumber_EndMinute = 6,
  protocol_standing_remind_set_FieldNumber_RepeatArray = 7,
};

GPB_FINAL @interface protocol_standing_remind_set : GPBMessage

/** 1bytes walking reminder switch true on, false off */
@property(nonatomic, readwrite) BOOL switchFlag;

/** 1bytes notification type */
@property(nonatomic, readwrite) enum notify_type notifyFlag;

/** Reminder start time */
@property(nonatomic, readwrite) uint32_t startHour;

@property(nonatomic, readwrite) uint32_t startMinute;

/** Reminder end time */
@property(nonatomic, readwrite) uint32_t endHour;

@property(nonatomic, readwrite) uint32_t endMinute;

/** 1bytes repeat cycle Monday~Sunday */
@property(nonatomic, readwrite, strong, null_resettable) GPBBoolArray *repeatArray;
/** The number of items in @c repeatArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger repeatArray_Count;

@end

/**
 * Fetches the raw value of a @c protocol_standing_remind_set's @c notifyFlag property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t protocol_standing_remind_set_NotifyFlag_RawValue(protocol_standing_remind_set *message);
/**
 * Sets the raw value of an @c protocol_standing_remind_set's @c notifyFlag property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setprotocol_standing_remind_set_NotifyFlag_RawValue(protocol_standing_remind_set *message, int32_t value);

#pragma mark - protocol_standing_remind_operate

typedef GPB_ENUM(protocol_standing_remind_operate_FieldNumber) {
  protocol_standing_remind_operate_FieldNumber_Operate = 1,
  protocol_standing_remind_operate_FieldNumber_StandingRemind = 2,
};

GPB_FINAL @interface protocol_standing_remind_operate : GPBMessage

/** 1bytes operation type 0: invalid operation 1: query 2: set */
@property(nonatomic, readwrite) enum operate_type operate;

@property(nonatomic, readwrite, strong, null_resettable) protocol_standing_remind_set *standingRemind;
/** Test to see if @c standingRemind has been set. */
@property(nonatomic, readwrite) BOOL hasStandingRemind;

@end

/**
 * Fetches the raw value of a @c protocol_standing_remind_operate's @c operate property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t protocol_standing_remind_operate_Operate_RawValue(protocol_standing_remind_operate *message);
/**
 * Sets the raw value of an @c protocol_standing_remind_operate's @c operate property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setprotocol_standing_remind_operate_Operate_RawValue(protocol_standing_remind_operate *message, int32_t value);

#pragma mark - protocol_standing_remind_inquire_reply

typedef GPB_ENUM(protocol_standing_remind_inquire_reply_FieldNumber) {
  protocol_standing_remind_inquire_reply_FieldNumber_FuncTable = 1,
  protocol_standing_remind_inquire_reply_FieldNumber_Operate = 2,
  protocol_standing_remind_inquire_reply_FieldNumber_StandingRemind = 3,
};

GPB_FINAL @interface protocol_standing_remind_inquire_reply : GPBMessage

/** 1bytes function table */
@property(nonatomic, readwrite) uint32_t funcTable;

/** 1bytes operation type 0: invalid operation 1: query 2: set */
@property(nonatomic, readwrite) enum operate_type operate;

@property(nonatomic, readwrite, strong, null_resettable) protocol_standing_remind_set *standingRemind;
/** Test to see if @c standingRemind has been set. */
@property(nonatomic, readwrite) BOOL hasStandingRemind;

@end

/**
 * Fetches the raw value of a @c protocol_standing_remind_inquire_reply's @c operate property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t protocol_standing_remind_inquire_reply_Operate_RawValue(protocol_standing_remind_inquire_reply *message);
/**
 * Sets the raw value of an @c protocol_standing_remind_inquire_reply's @c operate property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void Setprotocol_standing_remind_inquire_reply_Operate_RawValue(protocol_standing_remind_inquire_reply *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
